<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>常用的Bash命令(一)</title>
      <link href="/2019/12/08/bash/"/>
      <url>/2019/12/08/bash/</url>
      
        <content type="html"><![CDATA[<h2 id="1、hostname-查看主机名"><a href="#1、hostname-查看主机名" class="headerlink" title="1、hostname - 查看主机名"></a>1、hostname - 查看主机名</h2><p><code>hostname</code> 命令用于查看系统的主机名，亦或修改系统的主机名<br><code>hostname</code> 的常用命令如下:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 显示系统的当前主机名</span>hostname<span class="token comment" spellcheck="true">#修改系统的主机名</span>hostname damon<span class="token punctuation">-</span>system</code></pre><h2 id="2、uptime-查看系统运行时间"><a href="#2、uptime-查看系统运行时间" class="headerlink" title="2、uptime - 查看系统运行时间"></a>2、uptime - 查看系统运行时间</h2><pre class=" language-yaml"><code class="language-yaml">uptime</code></pre><h2 id="3、who-列出登录的用户"><a href="#3、who-列出登录的用户" class="headerlink" title="3、who - 列出登录的用户"></a>3、who - 列出登录的用户</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 显示当前登录的所有用户信息</span>who<span class="token comment" spellcheck="true"># 显示系统的启动时间</span>who <span class="token punctuation">-</span>b<span class="token comment" spellcheck="true"># 显示系统登录进程</span>who <span class="token punctuation">-</span>l<span class="token comment" spellcheck="true"># 显示当前登录用户关联的用户信息</span>who <span class="token punctuation">-</span>m<span class="token comment" spellcheck="true"># 显示所有登录用户的用户名和用户数</span>who <span class="token punctuation">-</span>q</code></pre><h2 id="4、uname-查看系统信息"><a href="#4、uname-查看系统信息" class="headerlink" title="4、uname - 查看系统信息"></a>4、uname - 查看系统信息</h2><p><code>uname</code>命令用于打印内核名称和版本、主机名等系统信息。命令的语法如下所示：</p><pre class=" language-yaml"><code class="language-yaml"> <span class="token comment" spellcheck="true"># 只打印内核的名称</span> uname <span class="token comment" spellcheck="true"># 使用 -n 选项，只打印系统的主机名</span> uname <span class="token punctuation">-</span>n <span class="token comment" spellcheck="true"># 使用 -r 选项，打印内核版本信息</span> uname <span class="token punctuation">-</span>r <span class="token comment" spellcheck="true"># 使用 -m 选项，打印系统的硬件名称</span> uname <span class="token punctuation">-</span>m <span class="token comment" spellcheck="true"># 使用 -p 选项，打印系统的处理器类型信息</span> uname <span class="token punctuation">-</span>p <span class="token comment" spellcheck="true"># 使用 -i 选项，打印系统的硬件平台信息</span> uname <span class="token punctuation">-</span>i <span class="token comment" spellcheck="true"># 使用 -a 选项，打印上述所有示例中的信息</span> uname <span class="token punctuation">-</span>a</code></pre><h2 id="5、date-显示系统时间"><a href="#5、date-显示系统时间" class="headerlink" title="5、date - 显示系统时间"></a>5、date - 显示系统时间</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 以默认格式显示系统的当前日期时间</span>date<span class="token comment" spellcheck="true"># 格式化当前日期</span>date +"%Y<span class="token punctuation">-</span>%m<span class="token punctuation">-</span>%d"</code></pre><h2 id="6、-id-显示用户属性"><a href="#6、-id-显示用户属性" class="headerlink" title="6、 id - 显示用户属性"></a>6、 id - 显示用户属性</h2><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 输出当前用户的uid、用户名、gid、组名及用户属于的群组信息</span>id<span class="token comment" spellcheck="true"># 使用 -u 选项，输出用户的 uid</span>id <span class="token punctuation">-</span>u<span class="token comment" spellcheck="true">#-u 选项和 -n 选项结合使用，输出账户的用户名</span>id <span class="token punctuation">-</span>un</code></pre><p>引用：<a href="https://blinkfox.github.io/2018/10/13/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-qi-ta-chang-yong-ming-ling/" target="_blank" rel="noopener">常用Bash命令整理之其他常用命令</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的Bash命令(二) 文件管理</title>
      <link href="/2019/12/08/bash2/"/>
      <url>/2019/12/08/bash2/</url>
      
        <content type="html"><![CDATA[<h2 id="1、touch-创建文件"><a href="#1、touch-创建文件" class="headerlink" title="1、touch - 创建文件"></a>1、touch - 创建文件</h2><p><code>touch</code> 命令就可用于创建、变更和修改文件的时间戳。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">-a</span><span class="token punctuation">:</span> 只改变访问时间 <span class="token punctuation">-</span><span class="token key atrule">c</span><span class="token punctuation">:</span> 不创建任何文件<span class="token punctuation">-</span><span class="token key atrule">m</span><span class="token punctuation">:</span> 只改变修改时间<span class="token punctuation">-</span><span class="token key atrule">r</span><span class="token punctuation">:</span> 使用指定文件的时间替代当前时间<span class="token punctuation">-</span><span class="token key atrule">t</span><span class="token punctuation">:</span> 使用 <span class="token punctuation">[</span><span class="token punctuation">[</span>CC<span class="token punctuation">]</span>YY<span class="token punctuation">]</span>MMDDhhmm<span class="token punctuation">[</span>.ss<span class="token punctuation">]</span> 替代当前时间</code></pre><h2 id="2、mkdir-创建目录"><a href="#2、mkdir-创建目录" class="headerlink" title="2、mkdir - 创建目录"></a>2、mkdir - 创建目录</h2><p><code>mkdir</code> 创建文件目录。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 在当前目录下创建一个给定的目录名</span>mkdir &lt;dirname<span class="token punctuation">></span><span class="token comment" spellcheck="true"># 使用 -p 选项，会自动创建所有还不存在的父目录</span>mkdir <span class="token punctuation">-</span>p backup/old</code></pre><h2 id="3、cp-复制文件或目录"><a href="#3、cp-复制文件或目录" class="headerlink" title="3、cp - 复制文件或目录"></a>3、cp - 复制文件或目录</h2><p><code>cp</code> 命令用于将文件从一个地方复制到另一个地方。<br>示例如下:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 在当前目录下，创建一个文件 file.txt 的副本，取名为 newfile.txt</span>cp file.txt newfile.txt<span class="token comment" spellcheck="true"># 复制当前目录下的 file.txt 文件到 /tmp 目录下</span>cp file.txt /tmp<span class="token comment" spellcheck="true"># 使用 -R 或 -r 选项，递归地复制一个目录</span><span class="token comment" spellcheck="true"># 即将一个目录及其下的所有文件和子目录都复制到另一个目录</span>cp <span class="token punctuation">-</span>R * /home/blinkfox/backup</code></pre><h2 id="4、scp-远程复制文件或目录"><a href="#4、scp-远程复制文件或目录" class="headerlink" title="4、scp - 远程复制文件或目录"></a>4、scp - 远程复制文件或目录</h2><p><code>scp</code>远程复制某服务器的一个文件到另一个服务器。命令的语法如下所示：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">-r</span><span class="token punctuation">:</span> 递归地复制一个目录<span class="token punctuation">-</span><span class="token key atrule">P</span><span class="token punctuation">:</span> 设置命令的端口号 <span class="token comment" spellcheck="true"># 从本地复制到远程(第二个指定了文件名)</span> scp local_file remote_username@remote_ip<span class="token punctuation">:</span>remote_folder  或者  scp local_file remote_username@remote_ip<span class="token punctuation">:</span>remote_file  <span class="token comment" spellcheck="true"># 从远程复制到本地(...)</span> scp remote_username@remote_ip<span class="token punctuation">:</span>remote_folder local_folder 或者  scp remote_username@remote_ip<span class="token punctuation">:</span>remote_file remote_file<span class="token comment" spellcheck="true"># 远程服务器防火墙有为scp命令设置了指定的端口</span><span class="token comment" spellcheck="true">#scp 命令使用端口号 4588</span> scp <span class="token punctuation">-</span>P 4588 remote@www.runoob.com<span class="token punctuation">:</span>/usr/local/sin.sh /home/administrator</code></pre><h2 id="5、mv-移动文件或目录"><a href="#5、mv-移动文件或目录" class="headerlink" title="5、mv - 移动文件或目录"></a>5、mv - 移动文件或目录</h2><p> <code>mv</code>命令用于将文件和目录从一个位置移到另外一个位置。命令的语法如下所示：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 将当前目录下的文件 source.txt 移到目录 /tmp 下</span>mv source.txt /tmp<span class="token comment" spellcheck="true"># 将目录 dir1、dir2 移到目录 dir_dist 下</span>mv dir1 dir2 dir_dist<span class="token comment" spellcheck="true"># 将当前目录下的 old.txt 文件更名为 new.txt</span>mv old.txt new.txt</code></pre><h2 id="6、-ln-链接文件或目录"><a href="#6、-ln-链接文件或目录" class="headerlink" title="6、 ln - 链接文件或目录"></a>6、 ln - 链接文件或目录</h2><p><code>ln</code>命令用于创建软链接或硬链接。使用 -s 选项，可以创建一个软链接：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 在目录 lib 下创建一个软链接 lib.so，链接到 /home/damon/src/library.so</span>ln <span class="token punctuation">-</span>s /home/damon/src/lib.so /home/damon/lib<span class="token comment" spellcheck="true"># 创建目录的软链接</span>ln <span class="token punctuation">-</span>s /home/damon/src source<span class="token comment" spellcheck="true">## 7、 rm - 删除文件或目录</span>`rm`删除文件或目录。示例如下：```yaml<span class="token comment" spellcheck="true"># 删除当前目录下的文件 file1.txt、file2.txt、file3.txt</span>rm file1.txt file2.txt file3.txt<span class="token comment" spellcheck="true"># 使用 -i 选项，可以在删除每个文件或目录前提示用户确认</span>rm <span class="token punctuation">-</span>i *<span class="token comment" spellcheck="true"># 删除当前目录下所有以".doc"结尾的文件</span>rm *.doc<span class="token comment" spellcheck="true"># 删除 /tmp 目录下的所有文件及其子目录(慎用)</span>rm <span class="token punctuation">-</span>rf /tmp/*</code></pre><p>参考：[常用Bash命令整理之操作文件和目录]（<a href="https://blinkfox.github.io/2018/10/10/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-cao-zuo-wen-jian-he-mu-lu/）" target="_blank" rel="noopener">https://blinkfox.github.io/2018/10/10/ruan-jian-gong-ju/linux/chang-yong-bash-ming-ling-zheng-li-zhi-cao-zuo-wen-jian-he-mu-lu/）</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>细数平时工作中用到的git命令</title>
      <link href="/2019/12/06/git/"/>
      <url>/2019/12/06/git/</url>
      
        <content type="html"><![CDATA[<h2 id="git基本操作命令"><a href="#git基本操作命令" class="headerlink" title="git基本操作命令"></a><strong>git基本操作命令</strong></h2><h3 id="添加git仓库"><a href="#添加git仓库" class="headerlink" title="添加git仓库"></a>添加git仓库</h3><pre class=" language-html"><code class="language-html">git initgit remote add origin <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin地址</span><span class="token punctuation">></span></span></code></pre><p>或者</p><pre class=" language-html"><code class="language-html">git clone <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>origin地址</span><span class="token punctuation">></span></span></code></pre><h3 id="git分支管理"><a href="#git分支管理" class="headerlink" title="git分支管理"></a>git分支管理</h3><blockquote><p>查看分支列表</p></blockquote><pre class=" language-html"><code class="language-html">git branch -a</code></pre><blockquote><p>创建新分支</p></blockquote><pre class=" language-html"><code class="language-html">git branch <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>branch名称</span><span class="token punctuation">></span></span></code></pre><blockquote><p>切换分支</p></blockquote><pre class=" language-html"><code class="language-html">git check <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>branch名称</span><span class="token punctuation">></span></span></code></pre><p>然后，上面两个命令也可以合成为一个命令</p><pre class=" language-html"><code class="language-html">git checkout -b <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>branch名称</span><span class="token punctuation">></span></span> ,</code></pre><p>这里经常有使用到git checkout -b origin &lt;branch名称&gt;，创建本地分支并拉取远程到本地</p><h3 id="git使用"><a href="#git使用" class="headerlink" title="git使用"></a>git使用</h3><blockquote><p>查看仓库有变化文件</p></blockquote><pre class=" language-html"><code class="language-html">git status</code></pre><blockquote><p>添加文件到索引库</p></blockquote><pre class=" language-html"><code class="language-html">git add <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file带路径的名称</span><span class="token punctuation">></span></span></code></pre><p>这里使用git add .,提交当前库中有变化的文件到索引库中</p><blockquote><p>提交added状态的文件，即添加到索引库中的文件</p></blockquote><pre class=" language-html"><code class="language-html">git commit -m '<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>注释</span><span class="token punctuation">></span></span>'</code></pre><blockquote><p>提交远程仓库</p></blockquote><pre class=" language-html"><code class="language-html">git push origin <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>branch名称</span><span class="token punctuation">></span></span></code></pre><p>这里如果当前分支只有一个追踪分支，git push即可。远程主机名可以忽略</p><blockquote><p>拉取分支更新文件</p></blockquote><pre class=" language-html"><code class="language-html">git pull origin <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>branch名称</span><span class="token punctuation">></span></span></code></pre><p>如果当前分支与主机存在追踪关系，git pull origin即可。如果只有一个追踪分支，远程主机名忽略 git pull即可</p><blockquote><p>删除分支</p></blockquote><pre class=" language-html"><code class="language-html">git branch -d <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>branch名称</span><span class="token punctuation">></span></span></code></pre><p>如若要删除远程分支，git push –delete origin &lt;branch名称&gt;</p><h3 id="git合并"><a href="#git合并" class="headerlink" title="git合并"></a>git合并</h3><blockquote><p>合并分支<br>示例一:将分支master合并到当前分支中，但不要自动进行新的提交</p></blockquote><pre class=" language-html"><code class="language-html">git merge --no-commit master</code></pre><p>示例二:合并到当前分支中，保留分支提交记录不自动提交</p><pre class=" language-html"><code class="language-html">git merge --no-ff master</code></pre><p>示例三:合并到当期分支,自动进行提交</p><pre class=" language-html"><code class="language-html">git merge master</code></pre><blockquote><p>合并冲突</p></blockquote><pre class=" language-html"><code class="language-html">setp1:更新并拉取远程到本地git fetch origingit checkout -b origin/masterstep2:切换拉取远程需被合并的分支，如已切换作pull操作git checkout -b origin <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>branch名称</span><span class="token punctuation">></span></span>step3:示例二操作，合并master到当前分支 不提交git merge --no-ff masterstep4:推送到远程主机git push origin <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>branch名称</span><span class="token punctuation">></span></span></code></pre><h3 id="git小知识"><a href="#git小知识" class="headerlink" title="git小知识"></a>git小知识</h3><blockquote><p>查看日志提交记录</p></blockquote><pre class=" language-html"><code class="language-html">git log</code></pre><blockquote><p>查看尚未暂存的文件更新了哪些部分</p></blockquote><pre class=" language-html"><code class="language-html">git diff <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>带路径的file</span><span class="token punctuation">></span></span></code></pre><blockquote><p>删除文件</p></blockquote><pre class=" language-html"><code class="language-html">git rm -r <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>带路径的file</span><span class="token punctuation">></span></span></code></pre><blockquote><p>标签</p></blockquote><pre class=" language-html"><code class="language-html">git tag </code></pre><p>创建标签则带参数-a，git tag -a &lt;tag名称&gt;</p><h2 id="git进阶篇"><a href="#git进阶篇" class="headerlink" title="git进阶篇"></a>git进阶篇</h2><p><a href="https://github.com/DamonNie/git-Submodule" target="_blank" rel="noopener">git子模块</a></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Git Submodule 管理项目</title>
      <link href="/2019/12/06/git-submodule/"/>
      <url>/2019/12/06/git-submodule/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h2><p>Pending</p><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a><strong><strong>使用场景</strong></strong></h2><p>基于公司的项目会越来越多，常常需要提取一个公共的类库提供给多个项目使用，但是这个library怎么和git在一起方便管理呢？</p><p>我们需要解决下面几个问题：</p><ul><li><p>如何在git项目中导入library库?</p><p>  answer:git submodule add【library-url】，参考<span style="color: #ff0000;">【<strong><strong>使用submodule】</strong></strong></span>。</p><p><img src="/medias/images/submodule-1.png" alt=""></p></li><li><p>library库在其他的项目中被修改了可以更新到远程的代码库中?</p><p>  answer:可以，<span style="color: #ff0000;">需要在submodule目录更新提交</span>，在业务架构中建议<span style="color: #ff0000;">单人操作更新提交</span>，实现读写剥离</p></li><li><p>其他项目如何获取到library库最新的提交?</p><p>  answer:<span style="color: #ff0000;">【<strong><strong>使用submodule】</strong></strong></span>中有说明每个submodule中有独立的commit id，依赖commit id单独管理submodule目录，依据submodule目录中commit id是否与公共库的同步选择是否更新</p><p><img src="/medias/images/submodule-2.png" alt=""></p></li><li><p>如何在clone的时候能够自动导入library库?</p><p>  answer:参考【Clone Submodule】，此处<span style="color: #ff0000;">建议方法二</span></p></li></ul><p>解决以上问题，可以考虑使用git的 Submodule来解决。</p><h2 id="什么是Submodule"><a href="#什么是Submodule" class="headerlink" title="什么是Submodule?"></a><strong><strong>什么是Submodule?</strong></strong></h2><pre><code>&lt;span style=&quot;color: #ff0000;&quot;&gt;git Submodule&lt;/span&gt; 是一个很好的多项目使用共同类库的工具，他允许类库项目做为&lt;span style=&quot;color: #ff0000;&quot;&gt;repository&lt;/span&gt;,子项目做为一个&lt;span style=&quot;color: #ff0000;&quot;&gt;单独的git项目&lt;/span&gt;存在父项目中，子项目可以有自己的独立的&lt;span style=&quot;color: #ff0000;&quot;&gt;commit，push，pull&lt;/span&gt;。而父项目以Submodule的形式&lt;span style=&quot;color: #ff0000;&quot;&gt;包含子项目&lt;/span&gt;，父项目可以&lt;span style=&quot;color: #ff0000;&quot;&gt;指定子项目header&lt;/span&gt;，父项目中会的&lt;span style=&quot;color: #ff0000;&quot;&gt;提交信息包含Submodule的信息&lt;/span&gt;，再clone父项目的时候可以把&lt;span style=&quot;color: #ff0000;&quot;&gt;Submodule初始化&lt;/span&gt;。</code></pre><h2 id="使用Submodule"><a href="#使用Submodule" class="headerlink" title="使用Submodule"></a><strong><strong>使用Submodule</strong></strong></h2><ul><li>使用git命令直接<span style="color: #ff0000;">添加Submodule</span>：</li></ul><p>git submodule add <a href="mailto:git@github.com:ronnylt/redlock-php.git" target="_blank" rel="noopener"><u>git@github.com:damonnie/redlock-php.git</u></a> redlock（别名）</p><ul><li><p>使用<span style="color: #ff0000;">git status</span>命令查看当前仓库状态：</p><p> <img src="/medias/images/submodule-3.png" alt=""></p></li></ul><p>可以看到多了两个需要提交的文件：.<span style="color: #ff0000;">gitmodules</span>和 <span style="color: #ff0000;">redlock</span></p><ul><li><p>.gitmodules 内容<span style="color: #ff0000;">包含Submodule的主要信息</span>，指定<span style="color: #ff0000;">reposirory</span>,指定路径:</p><p><img src="/medias/images/submodule-4.png" alt=""></p></li><li><p>要查看当前代码仓库所使用的子模块及其状态，除了看 .gitmodules 文件外，还可以执行 <span style="color: #ff0000;">git submodule</span>命令</p><p> <img src="/medias/images/submodule-5.png" alt=""></p></li><li><p>新文件redlock<span style="color: #ff0000;">保存子模块的信息</span>，默认情况下子模块会将子项目放到一个与仓库<span style="color: #ff0000;">同名的目录中</span>，本例中是redlock。如果想放到其他地方，那么可以命令后添加一个<span style="color: #ff0000;">不同的路径</span>。此处，可以添加多个不同的子模块</p><p> <img src="/medias/images/submodule-6.png" alt=""></p></li></ul><p>这里需要说明的是，submodule目录只保护子项目的commit id，父项目的git并不会记录submodule的文件变动。另外，这两个文件都需要提交到父项目的git中</p><h2 id="修改Submodule-业务仓库只读，公共仓库更新"><a href="#修改Submodule-业务仓库只读，公共仓库更新" class="headerlink" title="修改Submodule(业务仓库只读，公共仓库更新)"></a><strong><strong>修改Submodule(</strong></strong><span style="color: #ff0000;"><strong><strong>业务仓库只读，公共仓库更新</strong></strong></span><strong><strong>)</strong></strong></h2><ul><li><p>需要确认有对Submodule的commit权限：</p><pre><code> &lt;span style=&quot;background-color: #999999;&quot;&gt;cd redlock &lt;/span&gt;</code></pre></li><li><p>修改其中的一个文件，git status查看变动：</p><pre><code> &lt;span style=&quot;background-color: #999999;&quot;&gt;modified:   README.md&lt;/span&gt;</code></pre></li><li><p>提交更改内容，并push远程</p><pre><code> &lt;span style=&quot;background-color: #999999;&quot;&gt;git commit -m “test submodule”&amp;&amp; git push&lt;/span&gt;</code></pre></li><li><p>此处<span style="color: #ff0000;">redlock</span>中已经变更为submodule<span style="color: #ff0000;">最新的commit id</span>.由原来的4066b307978ac81bf16e878aeb21210a5b794f06变更为717af34cae93e0d24dba04bbc166b8f1840f3893</p><p> <img src="/medias/images/submodule-7.png" alt=""></p></li></ul><h2 id="更新Submodule"><a href="#更新Submodule" class="headerlink" title="更新Submodule"></a><strong><strong>更新Submodule</strong></strong></h2><p>更新Submodule有两种方式:</p><ul><li><p>在父项目的目录下直接运行</p><pre><code> &lt;span style=&quot;background-color: #999999;&quot;&gt;git submodule foreach git pull&lt;/span&gt;</code></pre></li><li><p>在Submodule的目录下面更新(<span style="color: #ff0000;">推荐此操作</span>)</p><pre><code> &lt;span style=&quot;background-color: #999999;&quot;&gt;cd redlock &amp;&amp; git checkout (所要同步的commit id所在分支) &amp;&amp; git pull&lt;/span&gt;可以看到在Submodule的目录中,使用git和单独的一个项目是一样的,注意更新Submodule的时候如果有新的commit id产生，需要在父项目产生一个新的提交，git-Submodule文件中的 Submodule commit会变为最新的commit id。</code></pre></li></ul><h2 id="Clone-Submodule"><a href="#Clone-Submodule" class="headerlink" title="Clone Submodule"></a><strong><strong>Clone Submodule</strong></strong></h2><p>clone Submodule有两种方式 一种是采用<span style="color: #ff0000;">递归</span>的方式clone整个项目，一种是<span style="color: #ff0000;">clone父项目</span>，再<span style="color: #ff0000;">更新子项目</span></p><ul><li><p>采用递归参数–recursive</p><pre><code>&lt;span style=&quot;background-color: #999999;&quot;&gt; git clone git@github.com:DamonNie/git-Submodule.git --recursive&lt;/span&gt;</code></pre><p> <img src="/medias/images/submodule-8.png" alt=""></p><p> 这里一定要带上递归参数，否则init Submodule 的clone是不全的</p></li><li><p>第二种方法先clone父项目，再初始化Submodule</p><pre><code> &lt;span style=&quot;background-color: #999999;&quot;&gt;git clone git@github.com:damonnie/git-Submodule.git &amp;&amp; cd git-Submodule&lt;/span&gt;</code></pre></li><li><p>初始化submodule:</p><pre><code> &lt;span style=&quot;background-color: #999999;&quot;&gt;git submodule init&lt;/span&gt;</code></pre><p> <img src="/medias/images/submodule-9.png" alt=""></p></li><li><p>更新Submodule:</p><pre><code> &lt;span style=&quot;background-color: #999999;&quot;&gt;git submodule update&lt;/span&gt;</code></pre><p> <img src="/medias/images/submodule-10.png" alt=""></p><p>此处要注意:submodule文件都是<span style="color: #ff0000;">init状态</span>，如要获取最新，请<span style="color: #ff0000;">切换要同步的commit id所在分支</span>，并<span style="color: #ff0000;">git pull</span>操作</p><p><img src="/medias/images/submodule-11.png" alt=""></p><p><img src="/medias/images/submodule-12.png" alt=""></p></li></ul><h2 id="删除Submodule"><a href="#删除Submodule" class="headerlink" title="删除Submodule"></a><strong><strong>删除Submodule</strong></strong></h2><p><span style="color: #ff0000;">git 并不支持直接删除Submodule需要手动删除对应的文件</span> </p><ul><li><p>使用<span style="color: #ff0000;">vim .git/config</span> 可打开vim编辑,删除对应的内容</p></li><li><p>使用<span style="color: #ff0000;">rm -rf .git/modules/redlock</span>, 删除.git下的缓存模块，最后提交项目。</p></li><li><p>使用<span style="color: #ff0000;">git rm –cached redlock</span>将redlock从版本控制中删除（本地仍保留有），若不需要可不带 –cached进行完全删除</p><p> <img src="/medias/images/submodule-13.png" alt=""></p></li><li><p>使用<span style="color: #ff0000;">vim .gitmodules </span>可打开vim编辑,删除对应的内容</p><h2 id="遇见git-submodule的坑"><a href="#遇见git-submodule的坑" class="headerlink" title="遇见git submodule的坑"></a><strong><strong>遇见git submodule的坑</strong></strong></h2></li><li><p><span>切换分支的时候,终端突然出现这个问题 The following untracked working tree files would be overwritten by checkout。</span><br><img src="/medias/images/submodule-14.png" alt=""></p></li></ul><p>字面意思上理解就是，有git工具没有跟踪到的文件切换后会被覆盖。通过资料查询解决方法</p><pre><code>**解决办法：删除这些文件，再切换到对的分支上再拉取代码**  git clean -d -fx &quot;&quot;</code></pre><p>如若依然无法切换，删除git submodule对应控制的代码即可。</p><p>参考: <u>姜家志:</u><a href="https://segmentfault.com/a/1190000003076028" target="_blank" rel="noopener"><u>使用Git Submodule管理子模块</u></a><u>唐巧的博客:</u><a href="https://blog.devtang.com/2013/05/08/git-submodule-issues/" target="_blank" rel="noopener"><u>Git submodule的坑</u></a></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> git submodule </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/12/05/hello-world/"/>
      <url>/2019/12/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客主题之hexo-theme-matery的介绍</title>
      <link href="/2018/09/28/hexo/"/>
      <url>/2018/09/28/hexo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这是一个采用<code>Material Design</code>和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/" target="_blank" rel="noopener">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>当你看到这里的时候，应该已经有一个自己的 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 博客了。如果还没有的话，不妨使用 Hexo 和 <a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">Markdown</a> 来写博客和文章。</p><p>点击 <a href="https://codeload.github.com/damonnie/hexo-theme-matery/zip/master" target="_blank" rel="noopener">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>Git clone</code> 命令来下载:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/damonnie/hexo-theme-matery.git</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span></code></pre><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span></code></pre><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"about"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span></code></pre><h3 id="新建友情连接-friends-页（可选的）"><a href="#新建友情连接-friends-页（可选的）" class="headerlink" title="新建友情连接 friends 页（可选的）"></a>新建友情连接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情连接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"ttps://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin" target="_blank" rel="noopener">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  custom_css<span class="token punctuation">:</span></code></pre><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><h3 id="中文链接转拼音（可选的）"><a href="#中文链接转拼音（可选的）" class="headerlink" title="中文链接转拼音（可选的）"></a>中文链接转拼音（可选的）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin" target="_blank" rel="noopener">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（可选的）"><a href="#文章字数统计插件（可选的）" class="headerlink" title="文章字数统计插件（可选的）"></a>文章字数统计插件（可选的）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，激活以下配置项即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">wordCount</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 将这个值设置为 true 即可.</span>  <span class="token key atrule">postWordCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://github.com/damonnie<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-github<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fa-facebook</code></li><li>Twitter: <code>fa-twitter</code></li><li>Google-plus: <code>fa-google-plus</code></li><li>Linkedin: <code>fa-linkedin</code></li><li>Tumblr: <code>fa-tumblr</code></li><li>Medium: <code>fa-medium</code></li><li>Slack: <code>fa-slack</code></li><li>新浪微博: <code>fa-weibo</code></li><li>微信: <code>fa-wechat</code></li><li>QQ: <code>fa-qq</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>4.7.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"五月雨变奏电音"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"AnimeVibe"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music1.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music-cover1.png"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Take me hand"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"DAISHI DANCE,Cecile Corbel"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"/medias/music/music2.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"/medias/music/cover2.png"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Shape of You"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"J.Fla"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music3.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music-cover3.png"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><blockquote><p><strong>注</strong>：以上 JSON 中的属性：<code>name</code>、<code>artist</code>、<code>url</code>、<code>cover</code> 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p></blockquote><p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 是否在首页显示音乐.</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">showTitle</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 是否开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span> <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'list'</span> <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span> <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7 </span><span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 列表默认折叠</span>  <span class="token key atrule">listMaxHeight</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 列表最大高度</span></code></pre><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2" target="_blank" rel="noopener">开源中国在线工具</a>、<a href="http://encode.chahuo.com/" target="_blank" rel="noopener">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx" target="_blank" rel="noopener">站长工具</a>。</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span></code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /medias/images/1.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /medias/images/2.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span></code></pre><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h3 id="添加萌萌的动漫人物"><a href="#添加萌萌的动漫人物" class="headerlink" title="添加萌萌的动漫人物"></a>添加萌萌的动漫人物</h3><p>先看看添加卡通人物之后的效果：</p><p>安装插件</p><pre class=" language-npm"><code class="language-npm">复制代码```安装下载动画人物库 如：```npm install live2d-widget-model-z16 -D</code></pre><p>根目录_config.yml配置里面添加：</p><pre class=" language-live2d:"><code class="language-live2d:">  enable:true   scriptFrom: local   pluginRootPath: live2dw/   pluginJsPath: lib/   pluginModelPath: assets/   tagMode:false   log:false   model:     use: live2d-widget-model-z16   display:     position: right     width:150     height:300   mobile:     show:true     react:       opacity:0.7</code></pre><p>动画库的样式示例：<br>Epsilon2.1</p><p><img src="https://user-gold-cdn.xitu.io/2019/9/18/16d432179164a4f1?imageslim" alt=""></p><p>Gantzert_Felixander：</p><p><img src="https://user-gold-cdn.xitu.io/2019/9/18/16d432179bcce33f?imageslim" alt=""><br>ni-j：</p><p><img src="https://user-gold-cdn.xitu.io/2019/9/18/16d4321812725510?imageslim" alt=""><br>nico：</p><p><img src="https://user-gold-cdn.xitu.io/2019/9/18/16d43218304b10d6?imageslim" alt=""><br>shizuku：</p><p><img src="https://user-gold-cdn.xitu.io/2019/9/18/16d43217e3c25e0a?imageslim" alt=""><br>z16：</p><p><img src="https://user-gold-cdn.xitu.io/2019/9/18/16d43217e471c240?imageslim" alt=""><br>动漫人物只好不要和不蒜子一起使用，不然不蒜子会显示不出来。</p><h3 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h3><p>原来的主题没有404页面，首先在<code>/source/</code>目录下新建一个<code>404.md</code>，内容如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span>title<span class="token punctuation">:</span><span class="token number">404</span>date<span class="token punctuation">:</span>2017<span class="token punctuation">-</span>07<span class="token punctuation">-</span>1916<span class="token punctuation">:</span><span class="token datetime number">41:10</span>type<span class="token punctuation">:</span><span class="token string">"404"</span>layout<span class="token punctuation">:</span><span class="token string">"404"</span>description<span class="token punctuation">:</span><span class="token string">"你访问的页面被外星人叼走了 :("</span><span class="token punctuation">---</span></code></pre><p>/themes/matery/layout/<code>目录下新建一个</code>404.ejs`文件，内容如下：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>style type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token operator">></span>    <span class="token comment" spellcheck="true">/* don't remove. */</span>  <span class="token punctuation">.</span>about<span class="token operator">-</span>cover <span class="token punctuation">{</span>          height<span class="token punctuation">:</span> 75vh<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"bg-cover pd-header about-cover"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"row"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col s10 offset-s1 m8 offset-m2 l8 offset-l2"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"brand"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title center-align"</span><span class="token operator">></span>            <span class="token number">404</span>          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"description center-align"</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">=</span> page<span class="token punctuation">.</span>description <span class="token operator">%</span><span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token comment" spellcheck="true">// 每天切换 banner 图.  Switch banner image every day.</span>      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>效果如下：<br> <img src="https://user-gold-cdn.xitu.io/2019/9/18/16d43217a18fcfc6?imageView2/0/w/1280/h/960/ignore-error/1" alt="效果图"></p><p>引用并感谢:<a href="https://blinkfox.github.io/" target="_blank" rel="noopener">闪烁之狐</a> <a href="https://gongchenghuigch.github.io/2019/09/09/theme/" target="_blank" rel="noopener">浅夏晴空</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> hexo-theme-matery </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
